hcurl.commits.txt
backend/src/controllers/updateController.js
73f7091f (hcurl 2022-10-21 18:01:29 -0400   1) const mysql = require("mysql")
73f7091f (hcurl 2022-10-21 18:01:29 -0400   2) const db = require("../helpers/database")
73f7091f (hcurl 2022-10-21 18:01:29 -0400   3) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400   4) module.exports = {
73f7091f (hcurl 2022-10-21 18:01:29 -0400   5)     deleteQRController: (req, res)=> {
73f7091f (hcurl 2022-10-21 18:01:29 -0400   6)       const qrname = req.body.name
73f7091f (hcurl 2022-10-21 18:01:29 -0400   7) //      const qrURL = req.body.url 
73f7091f (hcurl 2022-10-21 18:01:29 -0400   8) //      const description = req.body.description
73f7091f (hcurl 2022-10-21 18:01:29 -0400   9)       const userID = req.body.userID
73f7091f (hcurl 2022-10-21 18:01:29 -0400  10)   
73f7091f (hcurl 2022-10-21 18:01:29 -0400  11)       db.getConnection ( async (err, connection)=> {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  12)         if (err) throw (err)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  13)   
73f7091f (hcurl 2022-10-21 18:01:29 -0400  14)         const sqlSearch = `SELECT * FROM QRCodes 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  15)                            where qrname = ? AND userID = ? LIMIT 1`
73f7091f (hcurl 2022-10-21 18:01:29 -0400  16)         const search_query = mysql.format(sqlSearch, [qrname, userID])
73f7091f (hcurl 2022-10-21 18:01:29 -0400  17)         const sqlDelete = `DELETE FROM QRCodes WHERE qrname = ? AND userID = ?`
73f7091f (hcurl 2022-10-21 18:01:29 -0400  18)         const delete_query = mysql.format(sqlDelete, [qrname, userID])
73f7091f (hcurl 2022-10-21 18:01:29 -0400  19)   
73f7091f (hcurl 2022-10-21 18:01:29 -0400  20)         await connection.query (search_query, async (err, result)=> {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  21)           if (err) throw (err)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  22)           console.log("--------> Search Results")
73f7091f (hcurl 2022-10-21 18:01:29 -0400  23)           console.log(result.length)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  24)           if (result.length == 0) {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  25)             console.log("--------> QR Code does not exist")
73f7091f (hcurl 2022-10-21 18:01:29 -0400  26)             res.sendStatus(409)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  27)           } else {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  28)               await connection.query (delete_query, (err, result)=> {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  29)                 connection.release()
73f7091f (hcurl 2022-10-21 18:01:29 -0400  30)                 if (err) throw (err)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  31)                 console.log("--------> Deleted QR Code")
73f7091f (hcurl 2022-10-21 18:01:29 -0400  32)                 //console.log(result.insertId)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  33)                 res.sendStatus(201) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  34)               })
73f7091f (hcurl 2022-10-21 18:01:29 -0400  35)           }
73f7091f (hcurl 2022-10-21 18:01:29 -0400  36)         })
73f7091f (hcurl 2022-10-21 18:01:29 -0400  37)       })
73f7091f (hcurl 2022-10-21 18:01:29 -0400  38)     },
73f7091f (hcurl 2022-10-21 18:01:29 -0400  39)     updateQRController: (req, res)=> {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  40)       const qrname = req.body.name
73f7091f (hcurl 2022-10-21 18:01:29 -0400  41)       const qrURL = req.body.url 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  42)       const description = req.body.description
73f7091f (hcurl 2022-10-21 18:01:29 -0400  43)       const userID = req.body.userID
73f7091f (hcurl 2022-10-21 18:01:29 -0400  44) 
decc4bae (hcurl 2022-10-23 16:14:38 -0400  45)       var newqrname = req.body.newqrname
decc4bae (hcurl 2022-10-23 16:14:38 -0400  46)       var newqrurl = req.body.newqrurl
decc4bae (hcurl 2022-10-23 16:14:38 -0400  47)       var newqrdes = req.body.newqrdes
73f7091f (hcurl 2022-10-21 18:01:29 -0400  48) 
0f6f3cbe (hcurl 2022-10-21 20:35:45 -0400  49)       if (newqrname == null) {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  50)         newqrname = qrname
73f7091f (hcurl 2022-10-21 18:01:29 -0400  51)       }
0f6f3cbe (hcurl 2022-10-21 20:35:45 -0400  52)       if (newqrurl == null) {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  53)         newqrurl = qrURL
73f7091f (hcurl 2022-10-21 18:01:29 -0400  54)       }
0f6f3cbe (hcurl 2022-10-21 20:35:45 -0400  55)       if (newqrdes == null) {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  56)         newqrdes = description
73f7091f (hcurl 2022-10-21 18:01:29 -0400  57)       }
73f7091f (hcurl 2022-10-21 18:01:29 -0400  58) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  59)       db.getConnection ( async (err, connection)=> {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  60)         if (err) throw (err)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  61)   
73f7091f (hcurl 2022-10-21 18:01:29 -0400  62)         const sqlSearch = `SELECT * FROM QRCodes 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  63)                            where qrname = ? AND userID = ? LIMIT 1`
73f7091f (hcurl 2022-10-21 18:01:29 -0400  64)         const search_query = mysql.format(sqlSearch, [qrname, userID])
decc4bae (hcurl 2022-10-23 16:14:38 -0400  65)         const sqlUpdate = `UPDATE QRCodes SET qrname = ? 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  66)                            WHERE qrname = ? AND userID = ?`
decc4bae (hcurl 2022-10-23 16:14:38 -0400  67)         const update_query = mysql.format(sqlUpdate, [newqrname, qrname, userID])
73f7091f (hcurl 2022-10-21 18:01:29 -0400  68)   
decc4bae (hcurl 2022-10-23 16:14:38 -0400  69)         const sqlUpdateUrl = `UPDATE QRCodes SET qrURL = ? 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  70)         WHERE qrname = ? AND userID = ?`
decc4bae (hcurl 2022-10-23 16:14:38 -0400  71)         const update_queryurl = mysql.format(sqlUpdateUrl, [newqrurl, qrname, userID])
73f7091f (hcurl 2022-10-21 18:01:29 -0400  72) 
decc4bae (hcurl 2022-10-23 16:14:38 -0400  73)         const sqlUpdateDes = `UPDATE QRCodes SET description = ? 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  74)         WHERE qrname = ? AND userID = ?`
decc4bae (hcurl 2022-10-23 16:14:38 -0400  75)         const update_querydes = mysql.format(sqlUpdateDes, [newqrdes, qrname, userID])
73f7091f (hcurl 2022-10-21 18:01:29 -0400  76) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  77)         await connection.query (update_query, async (err, result)=> {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  78)           if (err) throw (err)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  79)           console.log("--------> Updated QR Code Name")
73f7091f (hcurl 2022-10-21 18:01:29 -0400  80)           //console.log(result.insertId)
decc4bae (hcurl 2022-10-23 16:14:38 -0400  81)            //res.sendStatus(201) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  82)         }) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  83) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  84)         await connection.query (update_queryurl, async (err, result)=> {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  85)           if (err) throw (err)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  86)             console.log("--------> Updated QR Code URL")
73f7091f (hcurl 2022-10-21 18:01:29 -0400  87)             //console.log(result.insertId)
decc4bae (hcurl 2022-10-23 16:14:38 -0400  88)             //res.sendStatus(201) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  89)         }) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  90) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  91)         await connection.query (update_querydes, async (err, result)=> {
73f7091f (hcurl 2022-10-21 18:01:29 -0400  92)           if (err) throw (err)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  93)           connection.release()
73f7091f (hcurl 2022-10-21 18:01:29 -0400  94)           if (err) throw (err)
73f7091f (hcurl 2022-10-21 18:01:29 -0400  95)           console.log("--------> Updated QR Code Description")
73f7091f (hcurl 2022-10-21 18:01:29 -0400  96)           //console.log(result.insertId)
decc4bae (hcurl 2022-10-23 16:14:38 -0400  97)         })
decc4bae (hcurl 2022-10-23 16:14:38 -0400  98)         res.sendStatus(201) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400  99)       })
73f7091f (hcurl 2022-10-21 18:01:29 -0400 100)     }
73f7091f (hcurl 2022-10-21 18:01:29 -0400 101)   }

backend/src/controllers/qrController.js
73f7091f (hcurl        2022-10-21 18:01:29 -0400 43)       const resultslimit = req.query.resultslimit
73f7091f (hcurl        2022-10-21 18:01:29 -0400 44)       var islimit
73f7091f (hcurl        2022-10-21 18:01:29 -0400 50) //lines 48 - 62 are for issue 70
73f7091f (hcurl        2022-10-21 18:01:29 -0400 53)           islimit = 0
73f7091f (hcurl        2022-10-21 18:01:29 -0400 54)         }
73f7091f (hcurl        2022-10-21 18:01:29 -0400 55)         else {
73f7091f (hcurl        2022-10-21 18:01:29 -0400 57)           islimit = 1
73f7091f (hcurl        2022-10-21 18:01:29 -0400 58)         }
73f7091f (hcurl        2022-10-21 18:01:29 -0400 59)         if (islimit == 0) {
73f7091f (hcurl        2022-10-21 18:01:29 -0400 61)         }
73f7091f (hcurl        2022-10-21 18:01:29 -0400 62)         if (islimit == 1) {
73f7091f (hcurl        2022-10-21 18:01:29 -0400 64)         }
73f7091f (hcurl        2022-10-21 18:01:29 -0400 74)             console.log("--------> Requested QR Codes have been found successfully")
73f7091f (hcurl        2022-10-21 18:01:29 -0400 76)             console.log("--------> Error, could not find the requested QR Codes")

backend/src/routes/updateRoute.js
73f7091f (hcurl 2022-10-21 18:01:29 -0400 1) const router = require('express').Router()
73f7091f (hcurl 2022-10-21 18:01:29 -0400 2) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400 3) const {deleteQRController, updateQRController} = require('../controllers/updateController')
73f7091f (hcurl 2022-10-21 18:01:29 -0400 4) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400 5) router.delete('/deleteQRCodes', deleteQRController)
73f7091f (hcurl 2022-10-21 18:01:29 -0400 6) router.patch('/updateQRCodes', updateQRController)
73f7091f (hcurl 2022-10-21 18:01:29 -0400 7) 
73f7091f (hcurl 2022-10-21 18:01:29 -0400 8) module.exports = router
